# -*- coding: utf-8 -*-
"""SentimentAnalysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iYSDeLEyTbSZrola-7yO62zo_lGohEkH

**1. Install and Import Dependencies**
"""

pip install torch==2.5.1 torchvision==0.20.1 torchaudio==2.5.1

pip install transformers requests beautifulsoup4 pandas numpy

from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch
import requests
from bs4 import BeautifulSoup
import re
import pandas as pd
import numpy as np

"""**2. Instantiate Model**"""

tokenizer = AutoTokenizer.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

model = AutoModelForSequenceClassification.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

"""**3. Encode and Calculate Sentiment**"""

#tokens = tokenizer.encode('This is not that good but its also bad', return_tensors='pt')
#result = model(tokens)
#result.logits
#int(torch.argmax(result.logits))+1

"""**4. Collect Data/Web Scraping**"""

r = requests.get('https://www.yelp.ca/biz/su-and-shi-noodle-bar-scarborough?osq=Ramen')
soup = BeautifulSoup(r.text, 'html.parser')
regex = re.compile('.*comment.*')
restaurant_name = soup.find('h1').text.strip()
results = soup.find_all('p', {'class':regex})
reviews = [result.text for result in results]

"""**5. Load Reviews into DataFrame and Score**"""



df = pd.DataFrame(np.array(reviews), columns=['review'])
#df['review'].iloc[0]
#df.tail()

def sentiment_score(review):
  tokens = tokenizer.encode(review, return_tensors='pt')
  result = model(tokens)
  result.logits
  return int(torch.argmax(result.logits))+1

#sentiment_score(df['review'].iloc[1])

df['sentiment'] = df['review'].apply(lambda x: sentiment_score(x[:512]))
print("The average sentiment of", restaurant_name,"based on the user comments is:", int(df['sentiment'].mean()), "out of 5", "meaning its:", int(df['sentiment'].mean()*20), "% positive")

"""# New Section"""